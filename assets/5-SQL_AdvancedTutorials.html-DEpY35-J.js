import{_ as d,c,a as l,e,b as s,w as t,d as a,r as o,o as u}from"./app-Dz-3KCnH.js";const k={},m={class:"custom-container tip"},v={href:"https://www.runoob.com/sql/sql-datatypes.html",target:"_blank",rel:"noopener noreferrer"};function h(g,n){const p=o("CodeGroupItem"),i=o("CodeGroup"),r=o("ExternalLinkIcon");return u(),c("div",null,[n[11]||(n[11]=l(`<img src="https://roaringelephant.org/wp-content/uploads/sites/5/2016/03/SQL.jpg" alt="SQL" height="300"><h2 id="sql-create-index-语句" tabindex="-1"><a class="header-anchor" href="#sql-create-index-语句"><span>SQL CREATE INDEX 语句</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>CREATE INDEX 语句用于在表中创建索引。</p><p>在不读取整个表的情况下，索引使数据库应用程序可以更快速地查找数据。</p></div><h3 id="_1-索引" tabindex="-1"><a class="header-anchor" href="#_1-索引"><span>1 索引</span></a></h3><p>你可以在表中创建索引，以便更加快速高效地查询数据。</p><p>用户无法看到索引，他们只能被用来加速搜索/查询。</p><blockquote><p>注释：更新一个包含索引的表需要比更新一个没有索引的表花费更多的时间，这是由于索引本身也需要更新。因此，理想的做法仅仅在常常被搜索的列（以及表）上面创建索引。</p></blockquote><p><strong>① SQL CREATE INDEX 语法</strong></p><p>在表上创建一个简单的索引。允许使用重复的值：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> index_name</span>
<span class="line"><span class="token keyword">ON</span> table_name <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② SQL CREATE UNIQUE INDEX 语法</strong></p><p>在表上创建一个唯一的索引。不允许使用重复的值：唯一的索引意味着两个行不能拥有相同的索引值。</p><p><code>Creates a unique index on a table. Duplicate values are not allowed</code></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">UNIQUE</span> <span class="token keyword">INDEX</span> index_name</span>
<span class="line"><span class="token keyword">ON</span> table_name <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注释</strong>：用于创建索引的语法在不同的数据库中不一样。因此，检查你的数据库中创建索引的语法。</p></blockquote><h3 id="_2-create-index-实例" tabindex="-1"><a class="header-anchor" href="#_2-create-index-实例"><span>2 CREATE INDEX 实例</span></a></h3><p>下面的 SQL 语句在 Persons 表的 LastName 列上创建一个名为 PIndex 的索引：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> PIndex</span>
<span class="line"><span class="token keyword">ON</span> Persons <span class="token punctuation">(</span>LastName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你希望索引不止一个列，你可以在括号中列出这些列的名称，用逗号隔开：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> PIndex</span>
<span class="line"><span class="token keyword">ON</span> Persons <span class="token punctuation">(</span>LastName<span class="token punctuation">,</span>FirstName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="sql-撤销索引、撤销表以及撤销数据库" tabindex="-1"><a class="header-anchor" href="#sql-撤销索引、撤销表以及撤销数据库"><span>SQL 撤销索引、撤销表以及撤销数据库</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>通过使用 DROP 语句，可以轻松地删除索引、表和数据库。</p></div><h3 id="_1-drop-index-语句" tabindex="-1"><a class="header-anchor" href="#_1-drop-index-语句"><span>1 DROP INDEX 语句</span></a></h3><p>索引是一种优化数据库查询性能的结构，但有时候可能需要删除某个索引，例如当索引不再需要或需要替换为新的索引时。</p><p>DROP INDEX 语句用于删除表中的索引。</p>`,25)),e(i,null,{default:t(()=>[e(p,{title:"语法格式"},{default:t(()=>n[0]||(n[0]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql","data-title":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DROP"),a(),s("span",{class:"token keyword"},"INDEX"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"IF"),a(),s("span",{class:"token keyword"},"EXISTS"),s("span",{class:"token punctuation"},"]"),a(" index_name")]),a(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"ON"),a(" TABLE_NAME"),s("span",{class:"token punctuation"},";")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1,__:[0]})]),_:1}),n[12]||(n[12]=l("<p><strong>参数说明：</strong></p><ul><li><code>DROP INDEX</code>：表示要删除索引的操作。</li><li><code>IF EXISTS</code>：是一个可选的子句，用于检查索引是否存在。如果存在，就执行删除操作；如果不存在，不会报错。</li><li><code>index_name</code>：要删除索引的名称。</li><li><code>ON table_name</code>：指定包含要删除索引的表的名称。</li></ul>",2)),e(i,null,{default:t(()=>[e(p,{title:"实例"},{default:t(()=>n[1]||(n[1]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql","data-title":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DROP"),a(),s("span",{class:"token keyword"},"INDEX"),a(),s("span",{class:"token keyword"},"IF"),a(),s("span",{class:"token keyword"},"EXISTS"),a(" idx_example")]),a(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"ON"),a(" my_table"),s("span",{class:"token punctuation"},";")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1,__:[1]})]),_:1}),n[13]||(n[13]=l('<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>请注意，删除索引可能会影响数据库的查询性能，因此在执行此类操作之前，请确保了解其对数据库的影响，并根据实际需求进行操作。</p></div><h3 id="_2-drop-table-语句" tabindex="-1"><a class="header-anchor" href="#_2-drop-table-语句"><span>2 DROP TABLE 语句</span></a></h3><p>DROP TABLE 语句用于删除表。</p><p>删除表将同时删除表的结构以及存储在其中的所有数据。因此，在执行 DROP TABLE 语句之前，请确保你真的希望永久删除表及其所有数据，因为此操作是不可逆的。</p>',4)),e(i,null,{default:t(()=>[e(p,{title:"语法格式"},{default:t(()=>n[2]||(n[2]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql","data-title":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DROP"),a(),s("span",{class:"token keyword"},"TABLE"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"IF"),a(),s("span",{class:"token keyword"},"EXISTS"),s("span",{class:"token punctuation"},"]"),a(" TABLE_NAME"),s("span",{class:"token punctuation"},";")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1,__:[2]})]),_:1}),n[14]||(n[14]=s("p",null,[s("strong",null,"参数说明"),a("：")],-1)),n[15]||(n[15]=s("ul",null,[s("li",null,[s("code",null,"DROP TABLE"),a("：表示删除表的操作。")]),s("li",null,[s("code",null,"IF EXISTS"),a("：是一个可选的子句，用于检查表是否存在。如果存在，执行删除操作；如果不存在，不会报错。")]),s("li",null,[s("code",null,"table_name"),a("：要删除的表的名称。")])],-1)),n[16]||(n[16]=s("p",null,"一下是一个简单的例子，假设要删除名为 my_table 的表：",-1)),e(i,null,{default:t(()=>[e(p,{title:"实例"},{default:t(()=>n[3]||(n[3]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql","data-title":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DROP"),a(),s("span",{class:"token keyword"},"TABLE"),a(),s("span",{class:"token keyword"},"IF"),a(),s("span",{class:"token keyword"},"EXISTS"),a(" my_table"),s("span",{class:"token punctuation"},";")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1,__:[3]})]),_:1}),n[17]||(n[17]=l('<div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>请注意，执行 DROP TABLE 将永久删除表和其所有数据。在执行此类操作之前，请确保你已备份重要的数据，并且你有删除表的权限。</p></div><h3 id="_3-drop-database-语句" tabindex="-1"><a class="header-anchor" href="#_3-drop-database-语句"><span>3 DROP DATABASE 语句</span></a></h3><p><code>DROP DATABASE</code> 语句用于删除数据库，包括其中的所有表、视图、存储过程等数据库对象。</p><p><code>DROP DATABASE</code> 是一个非常强大和危险的操作，因为它会永久删除整个数据库及其所有相关数据，因此在执行之前务必要慎重考虑并确保你真的希望执行此操作。</p>',4)),e(i,null,{default:t(()=>[e(p,{title:"语法格式"},{default:t(()=>n[4]||(n[4]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql","data-title":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DROP"),a(),s("span",{class:"token keyword"},"DATABASE"),a(),s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"IF"),a(),s("span",{class:"token keyword"},"EXISTS"),s("span",{class:"token punctuation"},"]"),a(" database_name"),s("span",{class:"token punctuation"},";")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1,__:[4]})]),_:1}),n[18]||(n[18]=s("p",null,[s("strong",null,"参数说明"),a("：")],-1)),n[19]||(n[19]=s("ul",null,[s("li",null,[s("code",null,"DROP DATABASE"),a("：表示删除数据库的操作。")]),s("li",null,[s("code",null,"IF EXISTS"),a("：是一个可选的子句，用于检查数据库是否存在。如果存在，执行删除操作；如果不存在，不会报错。")]),s("li",null,[s("code",null,"database_name"),a("：要删除的数据库的名称。")])],-1)),n[20]||(n[20]=s("p",null,"一下是一个简单的例子，假设要删除名为 my_database 的数据库：",-1)),e(i,null,{default:t(()=>[e(p,{title:"实例"},{default:t(()=>n[5]||(n[5]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql","data-title":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DROP"),a(),s("span",{class:"token keyword"},"DATABASE"),a(),s("span",{class:"token keyword"},"IF"),a(),s("span",{class:"token keyword"},"EXISTS"),a(" my_database"),s("span",{class:"token punctuation"},";")]),a(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1,__:[5]})]),_:1}),n[21]||(n[21]=l(`<p>在执行 <code>DROP DATABASE</code> 之前，请确保你已经备份了数据库中的重要数据，并且你确实有权限执行这个操作，因为删除数据库通常需要管理员或超级用户的权限。此外，执行此类操作之前最好先确认没有其他用户正在使用该数据库。</p><h3 id="_4-truncate-table-语句" tabindex="-1"><a class="header-anchor" href="#_4-truncate-table-语句"><span>4 TRUNCATE TABLE 语句</span></a></h3><p>如果我们仅仅需要删除表内的数据，但并不删除表本身，那么我们该如何做呢？</p><p>在 SQL 中，TRUNCATE TABLE 语句用于快速删除表中的所有数据，但保留表的结构（列、约束等），与 DELETE 语句相比，TRUNCATE TABLE 通常更快，因为它是通过删除表中的所有行而不是逐行删除实现的。</p><p>然而，需要注意的是，TRUNCATE TABLE 不会触发触发器，而且无法在事务中进行回滚。</p><p>请使用 TRUNCATE TABLE 语句：</p><p><strong>语法格式</strong>：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> TABLE_NAME<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>参数说明</strong>：</p><ul><li><code>TRUNCATE TABLE</code>：表示清空表的操作。</li><li><code>table_name</code>：要清空表的名称。</li></ul><p>以下是一个简单的例子，假设要清空名为 my_table 的表：</p><p><strong>实例</strong>：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> my_table<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当使用 TRUNCATE TABLE 清除数据时。表的主键自增值将被重置为默认的起始值，通常是从 1 开始。这意味着下一次插入数据时，主键从 1 开始递增。与之不同的是，使用 DELETE 语句删除数据并不会重置主键自增值，而是保留当前的自增值。</p><h2 id="sql-alter-table-语句" tabindex="-1"><a class="header-anchor" href="#sql-alter-table-语句"><span>SQL ALTER TABLE 语句</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>ALTER TABLE 语句用于在已有的表中添加、删除或修改列。</p></div><h3 id="_1-sql-alter-table-语法" tabindex="-1"><a class="header-anchor" href="#_1-sql-alter-table-语法"><span>1 SQL ALTER TABLE 语法</span></a></h3><p>如需在表中添加列，请使用下面的语法：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">ADD</span> column_name datype<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如需删除表中的列，请使用下面的语法（请注意，某些数据库系统不允许这种在数据库表中删除列的方式）：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> column_name<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>要改变表中列的数据类型，请使用下面的语法：</p><p><strong>① SQL Server / MS Access</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> column_name datatype<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>② MySQL / Oracle</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> column_name datatype<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>③ Oracle 10G 之后版本</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">MODIFY</span> column_name datatype<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-sql-alter-table-实例" tabindex="-1"><a class="header-anchor" href="#_2-sql-alter-table-实例"><span>2 SQL ALTER TABLE 实例</span></a></h3><p><code>Persons</code> 表</p><table><thead><tr><th style="text-align:left;">P_Id</th><th style="text-align:left;">LastName</th><th style="text-align:left;">FirstName</th><th style="text-align:left;">Address</th><th style="text-align:left;">City</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">Hansen</td><td style="text-align:left;">Ola</td><td style="text-align:left;">Timoteivn 10</td><td style="text-align:left;">Sandnes</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Svendson</td><td style="text-align:left;">Tove</td><td style="text-align:left;">Borgvn 23</td><td style="text-align:left;">Sandnes</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Pettersen</td><td style="text-align:left;">Kari</td><td style="text-align:left;">Storgt 20</td><td style="text-align:left;">Stavanger</td></tr></tbody></table><p>现在，我们想在 Persons 表中添加一个名为 DateOfBirth 的列</p><p>我们使用下面的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> Persons</span>
<span class="line"><span class="token keyword">ADD</span> DateOfBirth <span class="token keyword">date</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,34)),s("div",m,[n[10]||(n[10]=l('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p>',2)),s("p",null,[n[7]||(n[7]=s("strong",null,"请注意",-1)),n[8]||(n[8]=a("：新列 DateOfBirth 的类型是 date，可以存放日期。数据类型规定列中可以存放的数据的类型。如需了解 MS Access、MySQL 和 SQL Server 中可用的数据类型，请访问我们完整的 ",-1)),s("a",v,[n[6]||(n[6]=a("数据类型参考手册",-1)),e(r)]),n[9]||(n[9]=a("。",-1))])]),n[22]||(n[22]=l(`<p>现在 Persons 表将如下所示：</p><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;"></th><th style="text-align:left;"></th><th style="text-align:left;"></th><th style="text-align:left;"></th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">P_Id</td><td style="text-align:left;">LastName</td><td style="text-align:left;">FirstName</td><td style="text-align:left;">Address</td><td style="text-align:left;">City</td><td style="text-align:left;">DateOfBirth</td></tr><tr><td style="text-align:left;">1</td><td style="text-align:left;">Hansen</td><td style="text-align:left;">Ola</td><td style="text-align:left;">Timoteivn 10</td><td style="text-align:left;">Sandnes</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Svendson</td><td style="text-align:left;">Tove</td><td style="text-align:left;">Borgvn 23</td><td style="text-align:left;">Sandnes</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Pettersen</td><td style="text-align:left;">Kari</td><td style="text-align:left;">Storgt 20</td><td style="text-align:left;">Stavanger</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="_3-改变数据类型实例" tabindex="-1"><a class="header-anchor" href="#_3-改变数据类型实例"><span>3 改变数据类型实例</span></a></h3><p>现在，我们想要改变 Persons 表中 DateOfBirth 列的数据类型。</p><p>我们使用下面的 SQL 语句;</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> Persons</span>
<span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">COLUMN</span> DateOfBirth <span class="token keyword">year</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>请注意</strong>，现在 <code>DateOfBirth</code> 列的类型是 year，可以存放 2 位或 4 位格式的年份。</p></div><h3 id="_4-drop-column-实例" tabindex="-1"><a class="header-anchor" href="#_4-drop-column-实例"><span>4 DROP COLUMN 实例</span></a></h3><p>接下来，我们想要删除 Persons 表中的 DateOfBirth 列。</p><p>我们使用下面的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> Persons</span>
<span class="line"><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> DateOfBirth<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>现在，<code>Persons</code> 表将如下所示：</p><table><thead><tr><th style="text-align:left;">P_Id</th><th style="text-align:left;">LastName</th><th style="text-align:left;">FirstName</th><th style="text-align:left;">Address</th><th style="text-align:left;">City</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;">Hansen</td><td style="text-align:left;">Ola</td><td style="text-align:left;">Timoteivn 10</td><td style="text-align:left;">Sandnes</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;">Svendson</td><td style="text-align:left;">Tove</td><td style="text-align:left;">Borgvn 23</td><td style="text-align:left;">Sandnes</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;">Pettersen</td><td style="text-align:left;">Kari</td><td style="text-align:left;">Storgt 20</td><td style="text-align:left;">Stavanger</td></tr></tbody></table><h2 id="sql-auto-increment-字段" tabindex="-1"><a class="header-anchor" href="#sql-auto-increment-字段"><span>SQL AUTO INCREMENT 字段</span></a></h2><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p>Auto-increment 会在新纪录插入表中时生成一个唯一的数字。</p><p><code>AUTO INCREMENT 字段</code></p><p>我们通常希望在每次插入新纪录时，自动地创建著字段的值。</p><p>我们可以在表中创建一个 auto-increment 字段。</p></div><h3 id="_1-用于-mysql-的语法" tabindex="-1"><a class="header-anchor" href="#_1-用于-mysql-的语法"><span>1 用于 MySQL 的语法</span></a></h3><p>下面的 SQL 语句把 Persons 表中的 ID 列定义为 auto-increment 主键字段：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Persons <span class="token punctuation">(</span></span>
<span class="line">    ID <span class="token keyword">int</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">    LastName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    FirstName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Address <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>ID<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MySQL 使用 <code>AUTO_INCREMENT</code> 关键字来执行 auto-increment 任务。</p><p>默认地，<code>AUTO_INCREMENT</code> 的开始值是 1 ，每条新纪录递增 1.</p><p>要让 <code>AUTO_INCREMENT</code> 序列以其他的值起始，请使用下面的 SQL 语法：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> Persons <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>要在 Persons 表中插入新纪录，我们不必为 ID 列规定值（会自动添加一个唯一的值）：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> Persons <span class="token punctuation">(</span>FirstName<span class="token punctuation">,</span>LastName<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Lars&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Monsen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 SQL 语句会在 Persons 表中插入一条新纪录，ID 列会被赋予一个唯一的值。FirstName 列会被设置为 Lars，LastName 列会被设置为 Monsen 。</p><h3 id="_2-用于-sql-server-的语法" tabindex="-1"><a class="header-anchor" href="#_2-用于-sql-server-的语法"><span>2 用于 SQL Server 的语法</span></a></h3><p>下面的 SQL 语句把 Persons 表中的 ID 列定义为 auto-increment 主键字段：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Persons <span class="token punctuation">(</span></span>
<span class="line">    ID <span class="token keyword">int</span> <span class="token keyword">IDENTITY</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span></span>
<span class="line">    LastName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    FirstName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Address <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    City <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MS SQL Server 使用 IDENTITY 关键字来执行 auto-increment 任务。</p><p>在上面的实例中，IDENTITY 的开始值是 1 ，每条新纪录递增 1 。</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>提示</strong>：要规定 ID 列以 10 起始且递增 5 ，请把 Identity 改为 IDENTITY(10,5) 。</p></div><p>要在 Persons 表中插入新纪录，我们不必为 ID 列规定值（会自动添加一个唯一的值）：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> Persons <span class="token punctuation">(</span>FirstName<span class="token punctuation">,</span>LastName<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Lars&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Monsen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 SQL 语句会在 Persons 表中插入一条新纪录。ID 列会被赋予一个唯一的值。FirstName 列会被设置为 Lars，LastName 列会被设置为 Monsen。</p><h3 id="_3-用于-access-的语法" tabindex="-1"><a class="header-anchor" href="#_3-用于-access-的语法"><span>3 用于 Access 的语法</span></a></h3><p>下面的 SQL 语句把 Persons 表中的 ID 列定义为 auto-increment 主键字段：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Persons <span class="token punctuation">(</span></span>
<span class="line">    ID <span class="token keyword">Integer</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> AUTOINCREMENT<span class="token punctuation">,</span></span>
<span class="line">    LastName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    FirstName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Address <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    City <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MS Access 使用 <code>AUTOINCREMENT</code> 关键字来执行 auto-increment 任务。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> Persons <span class="token punctuation">(</span></span>
<span class="line">    ID <span class="token keyword">Integer</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> AUTOINCREMENT<span class="token punctuation">,</span></span>
<span class="line">    LastName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">    FirstName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    Address <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    City <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MS Access 使用 AUTOINCREMENT 关键字来执行 auto-increment 任务。</p><p>默认地，AUTOINCREMENT 的开始值是 1 ，每条新纪录递增 1 。</p><div class="custom-container tip"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p><p><strong>提示</strong>：要规定 ID 列以 10 起始且递增 5，请把 autoincrement 改为 AUTOINCREMENT(10,5)。</p></div><p>要在 Persons 表中插入新纪录，我们不必为 ID 列规定值（会自动添加一个唯一的值）：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> Persons <span class="token punctuation">(</span>FirstName<span class="token punctuation">,</span>LastName<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;Lars&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Monsen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 SQL 语句会在 Persons 表中插入一条新纪录，ID 列会被赋予一个唯一的值。FirstName 列会被设置为 <code>Lars</code>，LastName 列会被设置为 <code>Monsen</code> 。</p><h3 id="_4-用于-oracle-的语法" tabindex="-1"><a class="header-anchor" href="#_4-用于-oracle-的语法"><span>4 用于 Oracle 的语法</span></a></h3><p>在 Oracle 中，代码稍微复杂一点。</p><p>你必须通过 sequence 对象（该对象生成数字序列）创建 auto-increment 字段。</p><p>请使用下面的 <code>CREATE SEQUENCE</code> 语法：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> SEQUENCE seq_person</span>
<span class="line">MINVALUE <span class="token number">1</span></span>
<span class="line"><span class="token keyword">START</span> <span class="token keyword">WITH</span> <span class="token number">1</span></span>
<span class="line">INCREMENT <span class="token keyword">BY</span> <span class="token number">1</span></span>
<span class="line">CACHE <span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码创建一个名为 seq_person 的 sequence 对象，它以 1 起始且 1 递增。该对象缓存 10 个值以提高性能。cache 选项规定了为了提高访问速度要存储多少个序列值。</p><p>要在 Persons 表中插入新纪录，我们必须使用 nextval 函数（该函数从 seq_person 序列中取回下一个值）：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> Persons <span class="token punctuation">(</span>ID<span class="token punctuation">,</span>FirstName<span class="token punctuation">,</span>LastName<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span>seq_person<span class="token punctuation">.</span>nextval<span class="token punctuation">,</span><span class="token string">&#39;Lars&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Monsen&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的 SQL 语句会在 Persons 表中插入一条新纪录。ID 列会被赋值为来自 seq_person 序列的下一个数字。FirstName 列会被设置为 <code>Lars</code>，LastName 列会被设置为 <code>Monsen</code> 。</p>`,54))])}const b=d(k,[["render",h]]),w=JSON.parse('{"path":"/docs/SQL/SQL_Use/2_SQL_AdvancedTutorials/5-SQL_AdvancedTutorials.html","title":"SQL高级教程（五）","lang":"en-US","frontmatter":{"title":"SQL高级教程（五）","date":"2024/12/12"},"headers":[{"level":2,"title":"SQL CREATE INDEX 语句","slug":"sql-create-index-语句","link":"#sql-create-index-语句","children":[{"level":3,"title":"1 索引","slug":"_1-索引","link":"#_1-索引","children":[]},{"level":3,"title":"2 CREATE INDEX 实例","slug":"_2-create-index-实例","link":"#_2-create-index-实例","children":[]}]},{"level":2,"title":"SQL 撤销索引、撤销表以及撤销数据库","slug":"sql-撤销索引、撤销表以及撤销数据库","link":"#sql-撤销索引、撤销表以及撤销数据库","children":[{"level":3,"title":"1 DROP INDEX 语句","slug":"_1-drop-index-语句","link":"#_1-drop-index-语句","children":[]},{"level":3,"title":"2 DROP  TABLE 语句","slug":"_2-drop-table-语句","link":"#_2-drop-table-语句","children":[]},{"level":3,"title":"3 DROP DATABASE 语句","slug":"_3-drop-database-语句","link":"#_3-drop-database-语句","children":[]},{"level":3,"title":"4 TRUNCATE  TABLE 语句","slug":"_4-truncate-table-语句","link":"#_4-truncate-table-语句","children":[]}]},{"level":2,"title":"SQL ALTER TABLE 语句","slug":"sql-alter-table-语句","link":"#sql-alter-table-语句","children":[{"level":3,"title":"1 SQL ALTER TABLE 语法","slug":"_1-sql-alter-table-语法","link":"#_1-sql-alter-table-语法","children":[]},{"level":3,"title":"2 SQL ALTER TABLE 实例","slug":"_2-sql-alter-table-实例","link":"#_2-sql-alter-table-实例","children":[]},{"level":3,"title":"3 改变数据类型实例","slug":"_3-改变数据类型实例","link":"#_3-改变数据类型实例","children":[]},{"level":3,"title":"4 DROP COLUMN 实例","slug":"_4-drop-column-实例","link":"#_4-drop-column-实例","children":[]}]},{"level":2,"title":"SQL AUTO INCREMENT 字段","slug":"sql-auto-increment-字段","link":"#sql-auto-increment-字段","children":[{"level":3,"title":"1 用于 MySQL 的语法","slug":"_1-用于-mysql-的语法","link":"#_1-用于-mysql-的语法","children":[]},{"level":3,"title":"2 用于 SQL Server 的语法","slug":"_2-用于-sql-server-的语法","link":"#_2-用于-sql-server-的语法","children":[]},{"level":3,"title":"3 用于 Access 的语法","slug":"_3-用于-access-的语法","link":"#_3-用于-access-的语法","children":[]},{"level":3,"title":"4 用于 Oracle 的语法","slug":"_4-用于-oracle-的语法","link":"#_4-用于-oracle-的语法","children":[]}]}],"git":{"createdTime":1754894104000,"updatedTime":1754894104000,"contributors":[{"name":"chenkai","email":"1134596043@qq.com","commits":1}]},"filePathRelative":"docs/SQL/SQL_Use/2_SQL_AdvancedTutorials/5-SQL_AdvancedTutorials.md"}');export{b as comp,w as data};
