import{_ as l,c as t,b as n,a as i,d as a,e as o,r as p,o as c}from"./app-C11odEbk.js";const r={},d={href:"https://www.jyshare.com/front-end/7768/",target:"_blank",rel:"noopener noreferrer"};function u(m,s){const e=p("ExternalLinkIcon");return c(),t("div",null,[s[2]||(s[2]=n("img",{src:"https://roaringelephant.org/wp-content/uploads/sites/5/2016/03/SQL.jpg",alt:"SQL",height:"300"},null,-1)),s[3]||(s[3]=n("p",null,[n("strong",null,"SQL"),a(" ( "),n("code",null,"Structured Query Language"),a(" ，结构化查询语言) 是一种用于管理和操作关系型数据库的标准化编程语言。")],-1)),n("p",null,[s[1]||(s[1]=a("在线测试工具：",-1)),n("a",d,[s[0]||(s[0]=a("https://www.jyshare.com/front-end/7768/",-1)),o(e)])]),s[4]||(s[4]=i(`<h2 id="sql-简介" tabindex="-1"><a class="header-anchor" href="#sql-简介"><span>SQL 简介</span></a></h2><p><strong>SQL</strong> （ <code>Structured Query Language</code> ，结构化查询语言）是用于管理关系数据库管理系统 （<strong>RDBMS</strong>）。</p><p>SQL 通过一系列的语句和命令来执行数据定义、数据查询、数据操作和数据控制等功能，包括数据插入、查询、更新和删除，数据库模式创建和修改，以及数据访问控制。</p><h3 id="sql-是什么" tabindex="-1"><a class="header-anchor" href="#sql-是什么"><span>SQL 是什么？</span></a></h3><ul><li>SQL 是结构化查询语言，全称是 <code>Structured Query Language</code></li><li>SQL 让你可以访问和处理数据库，包括数据插入、查询、更新和删除</li><li>SQL 语言采用英语关键词，使其易读易写</li><li>SQL 有国际标准化组织 (ISO) 和美国国家标准协会 (ANSI) 标准化</li><li>SQL 提供了丰富的操作数据的功能，从简单的查询到复杂的数据库管理操作</li></ul><h3 id="sql-能做什么" tabindex="-1"><a class="header-anchor" href="#sql-能做什么"><span>SQL 能做什么？</span></a></h3><ul><li>SQL 面向数据库执行查询</li><li>SQL 可以从数据库取回数据</li><li>SQL 可在数据库中插入新的记录</li><li>SQL 可更新数据库中的数据</li><li>SQL 可创建新数据库</li><li>SQL 可在数据库中创建新表</li><li>SQL 可在数据库中创建存储过程</li><li>SQL 可在数据库中创建视图</li><li>SQL 可设置表、存储过程和视图的权限</li></ul><h3 id="sql-是一种标准-但是" tabindex="-1"><a class="header-anchor" href="#sql-是一种标准-但是"><span>SQL 是一种标准-但是 ...</span></a></h3><p>虽然 SQL 是一门 ANSI （<code>American National Standards Institute</code> 美国国家标准化组织）标准的计算机语言，但是仍然存在着许多不同版本的 SQL 语言。</p><p>然而，为了与 ANSI 标准相兼容，他们必须以相似的方式共同地来支持一些主要的命令 （比如 <code>SELECT</code>、<code>UPDATE</code>、<code>DELETE</code>、<code>INSERT</code>、<code>WHERE</code> 等等）。</p><blockquote><p>💡 注释：除了 SQL 标准外，大部分 SQL 数据库都拥有它们自己的专有扩展！</p></blockquote><h3 id="在网站中使用-sql" tabindex="-1"><a class="header-anchor" href="#在网站中使用-sql"><span>在网站中使用 SQL</span></a></h3><p>要创建一个显示数据库中数据的网站：</p><ul><li>RDBMS 数据库程序（比如 MS Access、SQL Server、MySQL）</li><li>使用服务器端脚本语言，比如 PHP 或 ASP</li><li>使用 SQL 来获取您想要的数据</li><li>使用 HTML / CSS</li></ul><h3 id="rdbms" tabindex="-1"><a class="header-anchor" href="#rdbms"><span>RDBMS</span></a></h3><p>RDBMS 指关系型数据库管理系统，全称 <code>Relational Database Management System</code>。</p><p>RDBMS 是 SQL 的基础，同样也是所有现代数据库系统的基础，比如 MS SQL Server、IBM DB2、Oracle、MySQL 以及 Microsoft Access。</p><p>RDBMS 中的数据存储在被称为表的数据库对象中。</p><p>表是相关的数据项的集合，它由列和行组成。</p><h3 id="sql-发展历史" tabindex="-1"><a class="header-anchor" href="#sql-发展历史"><span>SQL 发展历史</span></a></h3><p>以下是 SQL 发展历史的关键节点：</p><h4 id="_1970s-起源与早期发展" tabindex="-1"><a class="header-anchor" href="#_1970s-起源与早期发展"><span>1970s: 起源与早期发展</span></a></h4><ol><li><strong>1970年</strong>：埃德加·科德（Edgar F. Codd）发表了《A Relational Model of Data for Large Shared Data Banks》论文，提出了关系数据库的概念，为 SQL 的发展奠定了理论基础。</li><li><strong>1973年-1974年</strong>：IBM 的研究人员 Donald D. Chamberlin 和 Raymond F. Boyce 在科德的理论基础上开发了一种名为 SEQUEL（Structured English Query Language）的语言，用于操作和管理 IBM 的 System R 关系数据库。</li><li><strong>1976年</strong>：SEQUEL 更名为 SQL（Structured Query Language）。</li></ol><h4 id="_1980s-标准化与商业化" tabindex="-1"><a class="header-anchor" href="#_1980s-标准化与商业化"><span>1980s: 标准化与商业化</span></a></h4><ol><li><strong>1981年</strong>：IBM 推出了商用关系数据库系统 SQL/DS（Database System）和 DB2（Database 2）。</li><li><strong>1986年</strong>：美国国家标准协会（ANSI）发布了第一个 SQL 标准 ANSI SQL-86（SQL-87）。</li><li><strong>1987年</strong>：国际标准化组织（ISO）也采纳了 ANSI SQL-86 作为国际标准。</li></ol><h4 id="_1990s-扩展与改进" tabindex="-1"><a class="header-anchor" href="#_1990s-扩展与改进"><span>1990s: 扩展与改进</span></a></h4><ol><li><strong>1992年</strong>：发布了 SQL-92（SQL2）标准，显著扩展了 SQL 语言的功能，包括对新数据类型、嵌套查询和连接的支持。</li><li><strong>1999年</strong>：发布了 SQL:1999（SQL3）标准，引入了对象关系数据库（ORDBMS）特性、递归查询、触发器和用户定义函数。</li></ol><h4 id="_2000s-持续演进与新特性" tabindex="-1"><a class="header-anchor" href="#_2000s-持续演进与新特性"><span>2000s: 持续演进与新特性</span></a></h4><ol><li><strong>2003年</strong>：发布了 SQL:2003 标准，引入了 XML 相关特性和窗口函数。</li><li><strong>2006年</strong>：发布了 SQL:2006 标准，主要增强了对 XML 的支持。</li><li><strong>2008年</strong>：发布了 SQL:2008 标准，进一步改进了语法和性能优化。</li></ol><h4 id="_2010s-新功能与大数据支持" tabindex="-1"><a class="header-anchor" href="#_2010s-新功能与大数据支持"><span>2010s: 新功能与大数据支持</span></a></h4><ol><li><strong>2011年</strong>：发布了 SQL:2011 标准，增加了对时间数据类型和时间旅行（temporal data）的支持。</li><li><strong>2016年</strong>：发布了 SQL:2016 标准，引入了 JSON 数据类型和相关操作函数，适应了 NoSQL 数据库和大数据处理需求。</li></ol><h4 id="_2020s-现代化与标准更新" tabindex="-1"><a class="header-anchor" href="#_2020s-现代化与标准更新"><span>2020s: 现代化与标准更新</span></a></h4><ol><li><strong>2023年</strong>：最新的 SQL 标准持续改进，增加了对更现代化的数据库需求和特性的支持。</li></ol><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h4><p>SQL 从一种基于关系模型的查询语言发展成为现代数据库管理的核心语言，其标准在不断演进和扩展。各大数据库管理系统（如 MySQL、PostgreSQL、SQLite、SQL Server、Oracle 等）在遵循 SQL 标准的基础上，加入了自身的扩展和优化，使 SQL 成为数据操作和管理的强大工具。SQL 的发展不仅体现了技术的进步，也反映了数据管理需求的变化和增长。</p><h2 id="sql-语法" tabindex="-1"><a class="header-anchor" href="#sql-语法"><span>SQL 语法</span></a></h2><p><strong>SQL</strong>（Structured Query Language）是一种用于管理和操作关系数据库的标准语言，包括数据查询、数据插入、数据更新、数据删除、数据库结构创建和修改等功能</p><p><img src="https://www.runoob.com/wp-content/uploads/2013/09/SQL.png" alt=" https://www.runoob.com/wp-content/uploads/2013/09/SQL.png"></p><h3 id="数据库表" tabindex="-1"><a class="header-anchor" href="#数据库表"><span>数据库表</span></a></h3><p>一个数据库通常包含一个或多个表，每个表有一个名字标识（例如:&quot;<strong>Websites</strong>&quot;），表包含带有数据的记录（行）。</p><p>在本教程中，我们在 MySQL 的 RUNOOB 数据库中创建了 Websites 表，用于存储网站记录。</p><p>我们可以通过以下命令查看 &quot;Websites&quot; 表的数据：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">mysql<span class="token operator">&gt;</span> <span class="token keyword">use</span> RUNOOB<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">Database</span> changed</span>
<span class="line"></span>
<span class="line">mysql<span class="token operator">&gt;</span> <span class="token keyword">set</span> names utf8<span class="token punctuation">;</span></span>
<span class="line">Query OK<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">rows</span> affected <span class="token punctuation">(</span><span class="token number">0.00</span> sec<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">mysql<span class="token operator">&gt;</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Websites<span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">+</span><span class="token comment">----+--------------+---------------------------+-------+---------+</span></span>
<span class="line"><span class="token operator">|</span> id <span class="token operator">|</span> name         <span class="token operator">|</span> url                       <span class="token operator">|</span> alexa <span class="token operator">|</span> country <span class="token operator">|</span></span>
<span class="line"><span class="token operator">+</span><span class="token comment">----+--------------+---------------------------+-------+---------+</span></span>
<span class="line"><span class="token operator">|</span> <span class="token number">1</span>  <span class="token operator">|</span> Google       <span class="token operator">|</span> https:<span class="token comment">//www.google.cm/    | 1     | USA     |</span></span>
<span class="line"><span class="token operator">|</span> <span class="token number">2</span>  <span class="token operator">|</span> 淘宝          <span class="token operator">|</span> https:<span class="token comment">//www.taobao.com/   | 13    | CN      |</span></span>
<span class="line"><span class="token operator">|</span> <span class="token number">3</span>  <span class="token operator">|</span> 菜鸟教程      <span class="token operator">|</span> http:<span class="token comment">//www.runoob.com/    | 4689  | CN      |</span></span>
<span class="line"><span class="token operator">|</span> <span class="token number">4</span>  <span class="token operator">|</span> 微博          <span class="token operator">|</span> http:<span class="token comment">//weibo.com/         | 20    | CN      |</span></span>
<span class="line"><span class="token operator">|</span> <span class="token number">5</span>  <span class="token operator">|</span> Facebook     <span class="token operator">|</span> https:<span class="token comment">//www.facebook.com/ | 3     | USA     |</span></span>
<span class="line"><span class="token operator">+</span><span class="token comment">----+--------------+---------------------------+-------+---------+</span></span>
<span class="line"><span class="token number">5</span> <span class="token keyword">rows</span> <span class="token operator">in</span> <span class="token keyword">set</span> <span class="token punctuation">(</span><span class="token number">0.01</span> sec<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>解析</strong></p><ul><li><strong>use RUNOOB;</strong> 命令用于选择数据库。</li><li><strong>set names utf8;</strong> 命令用于设置使用的字符集。</li><li><strong>SELECT * FROM Websites;</strong> 读取数据表的信息。</li><li>上面的表包含五条记录（每一条对应一个网站信息）和5个列（id、name、url、alexa 和country）。</li></ul><h3 id="sql-语句" tabindex="-1"><a class="header-anchor" href="#sql-语句"><span>SQL 语句</span></a></h3><p>你需要在数据库上执行的大部分工作都由 SQL 语句完成。</p><p>下面的 SQL 语句从 <strong>Websites</strong> 表中选取所有记录：</p><p><strong>实例</strong></p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> Websites<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="请记住" tabindex="-1"><a class="header-anchor" href="#请记住"><span>请记住 ...</span></a></h3><ul><li>SQL 对大小写不敏感：<strong>SELECT</strong> 和 <strong>select</strong> 是相同的</li></ul><h3 id="sql-语句后面加分号" tabindex="-1"><a class="header-anchor" href="#sql-语句后面加分号"><span>SQL 语句后面加分号?</span></a></h3><p>某些数据库系统要求在每条 SQL 语句的末端使用分号。</p><p>分号是在数据库系统中分隔每条 SQL 语句的标准方法，这样就可以在对服务器的相同请求中执行一条以上的 SQL 语句。</p><h3 id="一些重要的-sql-命令" tabindex="-1"><a class="header-anchor" href="#一些重要的-sql-命令"><span>一些重要的 SQL 命令</span></a></h3><ul><li><strong>SELECT</strong> - 从数据库中提取数据</li><li><strong>UPDATE</strong> - 更新数据库中的数据</li><li><strong>DELETE</strong> - 从数据库中删除数据</li><li><strong>INSERT INTO</strong> - 向数据库中插入新数据</li><li><strong>CREATE DATABASE</strong> - 创建新数据库</li><li><strong>ALTER DATABASE</strong> - 修改数据库</li><li><strong>DROP TABLE</strong> - 删除表</li><li><strong>CREATE INDEX</strong> - 创建索引 （搜索值）</li><li><strong>DROP INDEX</strong> - 删除索引</li></ul><p>以下是一些常用的 SQL 语句和语法：</p><p>1 <code>SELECT</code>：用于从数据库中查询数据</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name</span>
<span class="line"><span class="token keyword">WHERE</span> condition</span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> column_name <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>column_name(s)</code> ：要查询的列</li><li><code>table_name</code> ：要查询的表</li><li><code>condition</code> ： 查询条件 （可选）</li><li><code>ORDER BY</code> ：排序方式，<strong>ASC</strong> 表示升序，<strong>DESC</strong> 表示降序</li></ul><p>2 <code>INSERT INTO</code> ：用于向数据库插入新数据</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> table_name <span class="token punctuation">(</span>column1<span class="token punctuation">,</span> column2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">VALUES</span> <span class="token punctuation">(</span>value1<span class="token punctuation">,</span> value2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>table_name</code> ：要插入数据的表</li><li><code>(column1, column2, ...)</code> ：要插入数据的列</li><li><code>(value1, value2, ...)</code> ：对应列的值</li></ul><p>3 <code>UPDATE</code> ：用于更新数据库表中的现有数据</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">UPDATE</span> table_name</span>
<span class="line"><span class="token keyword">SET</span> column1 <span class="token operator">=</span> value1<span class="token punctuation">,</span> column2 <span class="token operator">=</span> value2<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token keyword">WHERE</span> condition</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>table_name</code> ：要更新数据的表</li><li><code>column1 = value1, column2 = value2, ...</code> ：要更新的列及其新值</li><li><code>condition</code> ：更新条件</li></ul><p>4 <code>DELETE</code> ：用于从数据库表中删除数据</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> table_name</span>
<span class="line"><span class="token keyword">WHERE</span> condition</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>table_name</code> ：要删除数据的表</li><li><code>condition</code> ：删除条件</li></ul><p>5 <code>CREATE TABLE</code> ：用于创建新的数据库表</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> table_name <span class="token punctuation">(</span></span>
<span class="line">    column1 data_type <span class="token keyword">constraint</span><span class="token punctuation">,</span></span>
<span class="line">    column2 data_type <span class="token keyword">constraint</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>table_name</code> ：要创建的表明</li><li><code>column1,column2, ...</code> ：表的列</li><li><code>data_type</code> ：列的数据类型 （如 <strong>INT</strong>、<strong>VARCHAR</strong> 等）</li><li><code>constraint</code> ：列的约束 （如 <strong>PRIMARY KEY</strong> 、<strong>NOT NULL</strong> 等）</li></ul><p>6 <code>ALETER TABLE</code> ：用于修改现有数据库表的结构</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">ADD</span> column_name data_type</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>table_name</code> ：要修改的表</li><li><code>column_name</code> ：要添加的列</li><li><code>data_type</code> ：列的数据类型</li></ul><p>或：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"><span class="token keyword">DROP</span> <span class="token keyword">COLUMN</span> column_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>column_name</code>：要删除的列</li></ul><p>7 <code>DROP TABLE</code> ：用于删除数据库表</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> table_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>table_name</code> ：要删除的表</li></ul><p>8 <code>CREATE INDEX</code> ：用于创建索引，以加快查询速度</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> index_name</span>
<span class="line"><span class="token keyword">ON</span> table_name <span class="token punctuation">(</span>column_name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>index_name</code> ：索引的名称</li><li><code>column_name</code> ：要索引的列</li></ul><p>9 <code>DROP INDEX</code> ：用于删除索引</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> index_name</span>
<span class="line"><span class="token keyword">ON</span> table_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>index_name</code> ：要删除的索引名称</li><li><code>table_name</code> ：索引所在的表</li></ul><p>10 <code>WHERE</code> ：用于指定筛选条件。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name</span>
<span class="line"><span class="token keyword">WHERE</span> condition</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>condition</code> ：筛选条件。</li></ul><p>11 <code>ORDER BY</code> ：用于对结果集进行排序</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name</span>
<span class="line"><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> column_name <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>column_name</code> ：用于排序的列</li><li><code>ASC</code> ：升序（默认）</li><li><code>DESC</code> ：降序</li></ul><p>12 <code>GROUP BY</code> ：用于将结果集按一列或多列进行分组</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> aggregate_function<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name</span>
<span class="line"><span class="token keyword">WHERE</span> condition</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>aggregate_function(column_name)</code> ：聚合函数 （如 <strong>COUNT</strong> 、<strong>SUM</strong> 、<strong>AVG</strong> 等）</li></ul><p>13 <code>HAVING</code> ：用于对分组后的结果集进行筛选</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> aggregate_function<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name</span>
<span class="line"><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">HAVING</span> condition</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>condition</code> ：筛选条件</li></ul><p>14 <code>JOIN</code> ：用于将两个或多个表的记录结合起来</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name1</span>
<span class="line"><span class="token keyword">JOIN</span> table_name2</span>
<span class="line"><span class="token keyword">ON</span> table_name1<span class="token punctuation">.</span>column_name <span class="token operator">=</span> table_name2<span class="token punctuation">.</span>column_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>JOIN</code>: 可以是 INNER JOIN、LEFT JOIN、RIGHT JOIN 或 FULL JOIN。</li></ul><p>15 <code>DISTINCT</code> ：用于返回唯一不同的值。</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> column_name<span class="token punctuation">(</span>s<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">FROM</span> table_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>column_name(s)</code>：要查询的列。</li></ul>`,106))])}const v=l(r,[["render",u]]),g=JSON.parse('{"path":"/docs/SQL/SQL_Use/1_SQL_Tutorial/1-SQL_Tutorial.html","title":"SQL使用教程（一）","lang":"en-US","frontmatter":{"title":"SQL使用教程（一）","date":"2024/11/26"},"headers":[{"level":2,"title":"SQL 简介","slug":"sql-简介","link":"#sql-简介","children":[{"level":3,"title":"SQL 是什么？","slug":"sql-是什么","link":"#sql-是什么","children":[]},{"level":3,"title":"SQL 能做什么？","slug":"sql-能做什么","link":"#sql-能做什么","children":[]},{"level":3,"title":"SQL 是一种标准-但是 ...","slug":"sql-是一种标准-但是","link":"#sql-是一种标准-但是","children":[]},{"level":3,"title":"在网站中使用 SQL","slug":"在网站中使用-sql","link":"#在网站中使用-sql","children":[]},{"level":3,"title":"RDBMS","slug":"rdbms","link":"#rdbms","children":[]},{"level":3,"title":"SQL 发展历史","slug":"sql-发展历史","link":"#sql-发展历史","children":[]}]},{"level":2,"title":"SQL 语法","slug":"sql-语法","link":"#sql-语法","children":[{"level":3,"title":"数据库表","slug":"数据库表","link":"#数据库表","children":[]},{"level":3,"title":"SQL 语句","slug":"sql-语句","link":"#sql-语句","children":[]},{"level":3,"title":"请记住 ...","slug":"请记住","link":"#请记住","children":[]},{"level":3,"title":"SQL 语句后面加分号?","slug":"sql-语句后面加分号","link":"#sql-语句后面加分号","children":[]},{"level":3,"title":"一些重要的 SQL 命令","slug":"一些重要的-sql-命令","link":"#一些重要的-sql-命令","children":[]}]}],"git":{"createdTime":1754894104000,"updatedTime":1754894104000,"contributors":[{"name":"chenkai","email":"1134596043@qq.com","commits":1}]},"filePathRelative":"docs/SQL/SQL_Use/1_SQL_Tutorial/1-SQL_Tutorial.md"}');export{v as comp,g as data};
