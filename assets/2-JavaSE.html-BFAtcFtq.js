import{_ as i,c as o,a as e,b as p,d as a,e as t,r,o as l}from"./app-vVM8RjpN.js";const m="/assets/image-20250620085017479-BrFS6-j7.png",g="/assets/image-20250620085036800-CCMITKXm.png",d="/assets/image-20250620085059290-DVZs5f7z.png",c="/assets/image-20250620085132952-DCbRYA_6.png",u="/assets/image-20250620085146614-DMwBovTn.png",v="/assets/image-20250620085208418-2e_Grkdp.png",E="/assets/image-20250620085234467-D95a-zTN.png",k="/assets/image-20250620085246630-D0abc1Zo.png",b="/assets/image-20250620085302385-BFz81FxV.png",J="/assets/image-20250620085316677-D203u-HT.png",_="/assets/image-20250620085333475-C_t7c3MV.png",C="/assets/image-20250620085349991-dpaBB5dC.png",B="/assets/image-20250620085409410-BgRV-v8h.png",A="/assets/image-20250620085426194-CnFHiSLy.png",f="/assets/image-20250620085443605-CxxUjdGP.png",D="/assets/image-20250620085500909-CpEo3t2k.png",I="/assets/image-20250620085522567-CWbwcUPM.png",h="/assets/image-20250620085542181-ySlPdZfl.png",w="/assets/image-20250620085558118-Z0Cqvh9y.png",x="/assets/image-20250620085613937-oS0r8Eew.png",S="/assets/image-20250620085631568-CpCODbxt.png",y="/assets/image-20250620085649861-OxNAaElK.png",M="/assets/image-20250620085716552-LVbRdcEM.png",P="/assets/image-20250620085731743-BZ1TrJWO.png",U="/assets/image-20250620085750261-Do4BnHqx.png",j="/assets/image-20250620085806688-CX5ABq4c.png",V="/assets/image-20250620085822848-ChaLFIXv.png",K="/assets/image-20250620085835369-DUYbtIP8.png",q="/assets/image-20250620085845999-BylIUOvo.png",W="/assets/image-20250620085900756-ZaXgwfce.png",F="/assets/image-20250620085916666-CHIwk5Mw.png",O="/assets/image-20250620085929693-D2SqrZpO.png",H="/assets/image-20250620085948735-CHC25HLJ.png",N="/assets/image-20250620090004989-trcXzzoA.png",L="/assets/image-20250620090026317-B8RwmCb5.png",R="/assets/image-20250620090046165-B1QKoV1G.png",G="/assets/image-20250620090106581-BusPpwfO.png",X="/assets/image-20250620090126051-DHrCqOyb.png",T="/assets/image-20250620090141282-5HW_ikZs.png",Z="/assets/image-20250620090156022-BTvyyHzJ.png",z="/assets/image-20250620090208382-BKVCaQBX.png",Q="/assets/image-20250620090246032-JnN_QCer.png",Y="/assets/image-20250620090305721-BBKxNH07.png",$="/assets/image-20250620090326421-7Kb0Ckv9.png",ss="/assets/image-20250620090348716-Cy_XNaaJ.png",as="/assets/image-20250620090420855-DhAlLnWE.png",ps="/assets/image-20250620090436757-DVl67RGn.png",ns="/assets/image-20250620090500356-Cc-dlpAT.png",ts="/assets/image-20250620090511334-BQPVvAIN.png",es="/assets/image-20250620090525068-D-79dbYb.png",is="/assets/image-20250620090546721-BKdnfrHp.png",os="/assets/image-20250620090606678-BSA8KduT.png",rs="/assets/image-20250620090627355-C5Etx1SQ.png",ls="/assets/image-20250620090646470-ClCFeLol.png",ms="/assets/image-20250620090702563-Dz5_lyKC.png",gs="/assets/image-20250620090715951-DFQ2PgRV.png",ds="/assets/image-20250620090737629-D_ND7a-i.png",cs="/assets/image-20250620090757275-DqmJ4Z_J.png",us="/assets/image-20250620090813436-CWXELqnj.png",vs="/assets/image-20250620090833735-p8kYvdQU.png",Es={},ks={href:"https://baike.baidu.com/item/%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97/3118202",target:"_blank",rel:"noopener noreferrer"},bs={href:"https://baike.baidu.com/item/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97/7224729",target:"_blank",rel:"noopener noreferrer"},Js={href:"https://baike.baidu.com/item/%E5%9F%BA%E6%9C%AC%E5%8D%95%E5%85%83/5246264",target:"_blank",rel:"noopener noreferrer"},_s={href:"https://baike.baidu.com/item/%E4%BA%8C%E8%BF%9B%E5%88%B6/361457",target:"_blank",rel:"noopener noreferrer"},Cs={href:"https://baike.baidu.com/item/%E6%95%B0%E5%88%B6/217113",target:"_blank",rel:"noopener noreferrer"},Bs={href:"https://baike.baidu.com/item/%E5%9F%BA%E6%95%B0/4260",target:"_blank",rel:"noopener noreferrer"},As={href:"https://baike.baidu.com/item/%E4%B8%8E%E9%97%A8",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://baike.baidu.com/item/%E6%88%96%E9%97%A8",target:"_blank",rel:"noopener noreferrer"},Ds={href:"https://baike.baidu.com/item/%E9%9D%9E%E9%97%A8",target:"_blank",rel:"noopener noreferrer"},Is={href:"https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6/5459592",target:"_blank",rel:"noopener noreferrer"},hs={href:"https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6/12053",target:"_blank",rel:"noopener noreferrer"},ws={href:"https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A8%8B%E5%BA%8F/3220205",target:"_blank",rel:"noopener noreferrer"},xs={href:"https://baike.baidu.com/item/%E9%85%8D%E7%BD%AE/2394679",target:"_blank",rel:"noopener noreferrer"},Ss={href:"https://baike.baidu.com/item/%E5%86%85%E5%AD%98/103614",target:"_blank",rel:"noopener noreferrer"},ys={href:"https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90/974435",target:"_blank",rel:"noopener noreferrer"},Ms={href:"https://baike.baidu.com/item/%E8%BE%93%E5%85%A5%E8%AE%BE%E5%A4%87/10823368",target:"_blank",rel:"noopener noreferrer"},Ps={href:"https://baike.baidu.com/item/%E8%BE%93%E5%87%BA%E8%AE%BE%E5%A4%87/10823333",target:"_blank",rel:"noopener noreferrer"},Us={href:"https://baike.baidu.com/item/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/4827215",target:"_blank",rel:"noopener noreferrer"},js={href:"https://baike.baidu.com/item/%E4%BA%A4%E4%BA%92/6964417",target:"_blank",rel:"noopener noreferrer"},Vs={href:"https://baike.baidu.com/item/%E8%B4%9D%E5%B0%94%E5%AE%9E%E9%AA%8C%E5%AE%A4/686816",target:"_blank",rel:"noopener noreferrer"},Ks={href:"https://baike.baidu.com/item/%E4%B8%B9%E5%B0%BC%E6%96%AF%C2%B7%E9%87%8C%E5%A5%87/7267171",target:"_blank",rel:"noopener noreferrer"},qs={href:"https://baike.baidu.com/item/B%E8%AF%AD%E8%A8%80/1845842",target:"_blank",rel:"noopener noreferrer"},Ws={href:"https://www.jetbrains.com.cn/idea/",target:"_blank",rel:"noopener noreferrer"};function Fs(Os,s){const n=r("ExternalLinkIcon");return l(),o("div",null,[s[52]||(s[52]=e('<p><img src="https://bizhi1.com/wp-content/uploads/2025/02/princess-mononoke-and-wolf-desktop-wallpaper-4k.jpg" alt="幽灵公主与狼4K桌面壁纸 4K"></p><p><strong>注意：</strong> 开始学习JavaSE之前建议学习的前置课程《C语言程序设计》《数据结构》《操作系统》《计算机组成原理》</p><p>欢迎各位小伙伴来到JavaSE视频教程，期待与各位小伙伴共度这一旅程！视频中所有的文档、资料，都可以直接在视频下方简介中找到，视频非培训机构出品，纯个人录制，不需要加任何公众号、小程序，直接自取即可。</p><p>教程开始之前，提醒各位小伙伴：</p><ul><li>如果你对某样东西不熟悉，请务必保证跟视频中使用一模一样的环境、一模一样的操作方式去使用，不要自作主张，否则出现某些奇怪的问题又不知道怎么办，就会浪费很多时间。</li><li>视频依然是基于Java 8进行讲解，不要自己去安装一个其他的版本，想要了解新版本特性可以在另一个视频里面观看。</li><li>在学习过程中，尽可能避免出现中文文件夹，包括后面的环境安装、项目创建，都尽量不要放在中文路径下（因为使用中文常常出现奇奇怪怪的问题）建议使用对应的英文单词代替，或者是用拼音都可以，最好只出现英文字母和数字。</li><li>本系列教程使用 IDEA社区版（免费）即可，不需要申请终极版。</li></ul><p>如果觉得本视频对你有帮助，请一键三连支持一下UP主！</p><h2 id="计算机思维导论" tabindex="-1"><a class="header-anchor" href="#计算机思维导论"><span>计算机思维导论</span></a></h2><p>计算机自1946年问世以来，几乎改变了整个世界。</p><p>现在我们可以通过电脑来做很多事情，比如我们常常听到的什么人工智能、电子竞技、大数据等等，都和计算机息息相关，包括我们现在的手机、平板等智能设备，也是计算机转变而来的。各位可以看看最顶上的这张图片，如果你在小时候接触过计算机，那么一定对这张图片（照片拍摄于1996年，在美国加利福尼亚州加利福尼亚州的锁诺玛县）印象深刻，这张壁纸作为WindowsXP系统的默认壁纸，曾经展示在千家万户的电脑屏幕上。</p><p>也许你没有接触过计算机，也许你唯一接触计算机就是用来打游戏，也有可能你曾经捣鼓过计算机，在学习C语言之前，先让我们来了解一下计算机的世界。</p><h3 id="计算机的世界" tabindex="-1"><a class="header-anchor" href="#计算机的世界"><span>计算机的世界</span></a></h3><p><strong>注意：</strong> 如果你已经完成了《C语言程序设计》视频教程的学习，可以直接跳过此部分。</p><p>计算机虽然名字听着很高级，不过它也是由一个个简单电路组成的。</p><p><img src="'+m+'" alt="image-20250620085017479"></p><p>这是我们在初中就学习过的电路图，不过这种电路太过简单，只能完成一些很基础的的操作，比如点亮小灯泡等。</p><p>很明显想要实现计算机怎么高级的运算机器，肯定是做不到的，这时我们就需要引入更加强大的数字电路了。</p>',16)),p("blockquote",null,[p("p",null,[s[3]||(s[3]=a("用数字信号完成对数字量进行",-1)),p("a",ks,[s[0]||(s[0]=a("算术运算",-1)),t(n)]),s[4]||(s[4]=a("和",-1)),p("a",bs,[s[1]||(s[1]=a("逻辑运算",-1)),t(n)]),s[5]||(s[5]=a("的电路称为数字电路，或数字系统。由于它具有逻辑运算和逻辑处理功能，所以又称数字逻辑电路。现代的数字电路由半导体工艺制成的若干数字集成器件构造而成。逻辑门是数字逻辑电路的",-1)),p("a",Js,[s[2]||(s[2]=a("基本单元",-1)),t(n)]),s[6]||(s[6]=a("。",-1))])]),s[53]||(s[53]=p("p",null,"计算机专业一般会在大一开放《数字电路》这门课程，会对计算机底层的数字电路实现原理进行详细介绍。",-1)),s[54]||(s[54]=p("p",null,"数字电路引入了逻辑判断，我们来看看简单的数字电路：",-1)),s[55]||(s[55]=p("p",null,[p("img",{src:g,alt:"image-20250620085036800"})],-1)),s[56]||(s[56]=p("p",null,"数字电路中，用电压的高低来区分出两种信号，低电压表示0，高电压表示1，由于只能通过这种方式表示出两种类型的信号，所以计算机采用的是二进制。",-1)),p("blockquote",null,[p("p",null,[p("a",_s,[s[7]||(s[7]=a("二进制",-1)),t(n)]),s[10]||(s[10]=a("是计算技术中广泛采用的一种",-1)),p("a",Cs,[s[8]||(s[8]=a("数制",-1)),t(n)]),s[11]||(s[11]=a("。二进制数据是用0和1两个数码来表示的数。它的",-1)),p("a",Bs,[s[9]||(s[9]=a("基数",-1)),t(n)]),s[12]||(s[12]=a("为2，进位规则是“逢二进一”，借位规则是“借一当二”。",-1))]),s[13]||(s[13]=p("p",null,"比如我们一般采用的都是十进制表示，比如9再继续加1的话，就需要进位了，变成10，在二进制中，因为只有0和1，所以当1继续加1时，就需要进位了，就变成10了（注意这不是十，读成一零就行了）",-1))]),p("p",null,[s[17]||(s[17]=a("当然，仅仅有两种信号还不够，我们还需要逻辑门来辅助我们完成更多的计算，最基本的逻辑关系是与、或、非，而逻辑门就有相应的是",-1)),p("a",As,[s[14]||(s[14]=a("与门",-1)),t(n)]),s[18]||(s[18]=a("、",-1)),p("a",fs,[s[15]||(s[15]=a("或门",-1)),t(n)]),s[19]||(s[19]=a("和",-1)),p("a",Ds,[s[16]||(s[16]=a("非门",-1)),t(n)]),s[20]||(s[20]=a("，可以用电阻、电容、二极管、三极管等分立原件构成（具体咋构成的咱这里就不说了）",-1))]),s[57]||(s[57]=e('<p>比如与操作，因为只有两种类型，我们一般将1表示为真，0表示为假，与操作（用&amp;表示）要求两个数参与进来，比如：</p><ul><li><p>1 &amp; 1 = 1 必须两边都是真，结果才为真。</p></li><li><p>1 &amp; 0 = 0 两边任意一个或者都不是真，结果为假。</p></li></ul><p>或运算（用 | 表示）：</p><ul><li><p>1 | 0 = 1 两边只要有一个为真，结果就为真</p></li><li><p>0 | 0 = 0 两边同时为假，结果才是假</p></li></ul><p>非运算实际上就是取反操作（可以是 ! 表示）</p><ul><li><p>!1 = 0</p></li><li><p>!0 = 1 非运算会将真变成假，假变成真</p></li></ul><p>有了这些运算之后，我们的电路不仅仅可以实现计算，也可以实现各种各样的逻辑判断，最终才能发展成我们的计算机。</p><p>前面我们大概介绍一下计算机的底层操作原理，接着我们来看看计算机的基本组成。</p><p><img src="'+d+'" alt="image-20250620085059290"></p><p>相信各位熟知的计算机都是一个屏幕+一个主机的形式，然后配上我们的键盘鼠标，就可以开始使用了，但是实际上标准的计算机结构并没有这么简单，我们来看看：</p><p><img src="'+c+'" alt="image-20250620085132952"></p><p>我们电脑最核心的部件，当属CPU，因为几乎所有的运算都是依靠CPU进行（各种各样的计算电路已经在CPU中安排好了，我们只需要发送对应的指令就可以进行对应的运算），它就像我们人的大脑一样，有了大脑才能进行思考。不过光有大脑还不行，还要有一些其他的部分来辅助工作，比如我们想向电脑里面打字，那么就需要连接一个键盘才能输入，我们想要点击桌面上的图标，那么就需要一个鼠标来操作光标，这些都是输入设备。我们的电脑开机之后显示器上会显示出画面，实际上显示器就是输出设备。</p><p>当然除了这些内容之外，我们的电脑还需要内存来保存运行时的一些数据，以及外存来保存文件（比如硬盘）等。我们常说的iPhone13 512G，这个512G并不是指的内存，而是指的外存，准确的说是用于存放文件硬盘大小，而真正的内存是我们常说的4G/6G/8G运行内存，内存的速度远高于外存的速度，所以1G内存的价格远超1G硬盘的价格。</p><p><img src="'+u+'" alt="image-20250620085146614"></p><p>计算机包括五大部件：运算器、控制器、存储器、输入和输出设备。有了这一套完整的硬件环境，我们的电脑才算是有了一个完整的身体。</p><h3 id="操作系统概述" tabindex="-1"><a class="header-anchor" href="#操作系统概述"><span>操作系统概述</span></a></h3><p><strong>注意：</strong> 如果你已经完成了《C语言程序设计》视频教程的学习，可以直接跳过此部分。</p><p>前面我们了解了一下计算机的大致原理和组成结构，但是光有这一套硬件可不行，如何让这一套硬件按照我们想要的方式运作起来，也是非常重要的，这时我们就需要介绍操作系统了。</p>',18)),p("blockquote",null,[p("p",null,[s[31]||(s[31]=a("操作系统（operating system，简称OS）是管理",-1)),p("a",Is,[s[21]||(s[21]=a("计算机硬件",-1)),t(n)]),s[32]||(s[32]=a("与",-1)),p("a",hs,[s[22]||(s[22]=a("软件",-1)),t(n)]),s[33]||(s[33]=a("资源的",-1)),p("a",ws,[s[23]||(s[23]=a("计算机程序",-1)),t(n)]),s[34]||(s[34]=a("。操作系统需要处理如管理与",-1)),p("a",xs,[s[24]||(s[24]=a("配置",-1)),t(n)]),p("a",Ss,[s[25]||(s[25]=a("内存",-1)),t(n)]),s[35]||(s[35]=a("、决定",-1)),p("a",ys,[s[26]||(s[26]=a("系统资源",-1)),t(n)]),s[36]||(s[36]=a("供需的优先次序、控制",-1)),p("a",Ms,[s[27]||(s[27]=a("输入设备",-1)),t(n)]),s[37]||(s[37]=a("与",-1)),p("a",Ps,[s[28]||(s[28]=a("输出设备",-1)),t(n)]),s[38]||(s[38]=a("、操作网络与管理",-1)),p("a",Us,[s[29]||(s[29]=a("文件系统",-1)),t(n)]),s[39]||(s[39]=a("等基本事务。操作系统也提供一个让用户与系统",-1)),p("a",js,[s[30]||(s[30]=a("交互",-1)),t(n)]),s[40]||(s[40]=a("操作的界面。",-1))]),s[41]||(s[41]=p("p",null,"一般在计算机专业大二，会开放《操作系统》课程，会详细讲解操作系统的底层运作机制和调度。",-1))]),s[58]||(s[58]=e('<p>一般我们电脑上都安装了Windows操作系统（苹果笔记本安装的是MacOS操作系统），现在主流的电脑都已经预装Windows11了：</p><p><img src="'+v+'" alt="image-20250620085208418"></p><p>有了操作系统，我们的电脑才能真正运行起来，我们就可以轻松地通过键盘和鼠标来操作电脑了。</p><p>不过操作系统最开始并不是图形化界面，它类似于Windows中的命令提示符：</p><p><img src="'+E+'" alt="image-20250620085234467"></p><p><img src="'+k+'" alt="image-20250620085246630"></p><p>没有什么图标这些概念，只有一个简简单单的黑框让我们进行操作，通过输入命令来进行一些简单的使用，程序的运行结果也会在黑框框（命令行）中打印出来，不过虽然仅仅是一个黑框，但是能运行的程序可是非常非常多的，只需要运行我们编写好的程序，就能完成各种各样复杂的计算任务，并且计算机的计算速度远超我们的人脑。</p><blockquote><p>中国超级计算机系统天河二号，计算速度达到每秒5.49亿亿次。</p></blockquote><p>当然，除了我们常见的Windows和MacOS系统之外，还有我们以后需要经常打交道的Linux操作系统，这种操作系统是开源的，意思是所有的人都可以拿到源代码进行修改，于是就出现了很多发行版：</p><p><img src="'+b+'" alt="image-20250620085302385"></p><p>这些发行版有带图形化界面的，也有不带图形化界面的，不带图形化界面的Linux将是我们以后学习的重点。</p><p>不同操作系统之间的软件并不是通用的，比如Windows下我们的软件一般是.exe后缀名称，而MacOS下则不是，并且也无法直接运行.exe文件，这是因为不同操作系统的具体实现会存在一些不同，程序编译（我们之后会介绍到）之后的格式也会不同，所以是无法做到软件通用的。</p><p>正是因为有了操作系统，才能够组织我们计算机的底层硬件（包括CPU、内存、输入输出设备等）进行有序工作，没有操作系统电脑就如同一堆废铁，只有躯壳没有灵魂。</p><h3 id="计算机编程语言" tabindex="-1"><a class="header-anchor" href="#计算机编程语言"><span>计算机编程语言</span></a></h3><p><strong>注意：</strong> 如果你已经完成了《C语言程序设计》视频教程的学习，可以直接跳过此部分。</p><p>现在我们大致了解了我们的电脑的运作原理，实际上是一套完整的硬件+一个成形的操作系统共同存在的。接着我们就可以开始了解一下计算机的编程语言了。我们前面介绍的操作系统也是由编程语言写出来的，操作系统本身也算是一个软件。</p><p><img src="'+J+'" alt="image-20250620085316677"></p><p>那么操作系统是如何让底层硬件进行工作的呢？实际上就是通过向CPU发送指令来完成的。</p><blockquote><p>计算机指令就是指挥机器工作的指示和命令，程序就是一系列按一定顺序排列的指令，执行程序的过程就是计算机的工作过程。指令集，就是CPU中用来计算和控制计算机系统的一套指令的集合，而每一种新型的CPU在设计时就规定了一系列与其他硬件电路相配合的指令系统。而指令集的先进与否，也关系到CPU的性能发挥，它也是CPU性能体现的一个重要标志。</p></blockquote><p>我们电脑中的CPU有多种多样的，不同的CPU之间可能也会存在不同的架构，比如现在最常用的是x86架构，还有我们手机平板这样的移动设备使用的arm架构，不同的架构指令集也会有不同。</p><p>我们知道，计算机底层硬件都是采用的0和1这样的二进制表示，所以指令也是一样的，比如（这里随便写的）：</p><ul><li><p>000001 - 代表开机</p></li><li><p>000010 - 代表关机</p></li><li><p>000011 - 代表进行加法运算</p></li></ul><p>当我们通过电路发送给CPU这样的二进制指令，CPU就能够根据我们的指令执行对应的任务，而我们编写的程序保存在硬盘中也是这样的二进制形式，我们只需要将这些指令组织好，按照我们的思路一条一条执行对应的命令，就能够让计算机计算任何我们需要的内容了，这其实就是机器语言。</p><p>不过随着时代的进步，指令集越来越大，CPU支持的运算类型也越来越多，这样的纯二进制编写实在是太累了，并且越来越多的命令我们根本记不住，于是就有了汇编语言。汇编语言将这些二进制的操作码通过助记符来替换：</p><ul><li><p>MOV 传送字或字节。</p></li><li><p>MOVSX 先符号扩展,再传送。</p></li><li><p>MOVZX 先零扩展,再传送。</p></li><li><p>PUSH 把字压入堆栈。</p></li></ul><p>把这些原有的二进制命令通过一个单词来代替，这样是不是就好记多了，在程序编写完成后，我们只需要最后将这些单词转换回二进制指令就可以了，这也是早期出现的低级编程语言。</p><p><img src="'+_+'" alt="image-20250620085333475"></p><p>不过虽然通过这些助记符就能够很轻松地记住命令，但是还是不够方便，因为可能我们的程序需要完成一个很庞大的任务，但是如果还是这样一条一条指令进行编写，是不是太慢了点，有时候可能做一个简单的计算，都需要好几条指令来完成。于是，高级编程语言——C语言，终于诞生了。</p>',28)),p("blockquote",null,[p("p",null,[s[45]||(s[45]=a("C语言诞生于美国的",-1)),p("a",Vs,[s[42]||(s[42]=a("贝尔实验室",-1)),t(n)]),s[46]||(s[46]=a("，由",-1)),p("a",Ks,[s[43]||(s[43]=a("丹尼斯·里奇",-1)),t(n)]),s[47]||(s[47]=a("（Dennis MacAlistair Ritchie）以肯尼斯·蓝·汤普森（Kenneth Lane Thompson）设计的",-1)),p("a",qs,[s[44]||(s[44]=a("B语言",-1)),t(n)]),s[48]||(s[48]=a("为基础发展而来，在它的主体设计完成后，汤普森和里奇用它完全重写了UNIX操作系统，且随着UNIX操作系统的发展，C语言也得到了不断的完善。",-1))])]),s[59]||(s[59]=e(`<p>高级语言不同于低级语言，低级语言的主要操作对象是指令本身，而高级语言却更加符合我们人脑的认知，更像是通过我们人的思维，去告诉计算机你需要做什么，包括语法也会更加的简单易懂。下面是一段简单的C语言代码：</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c" data-title="c"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>   <span class="token comment">//定义一个a等于10</span></span>
<span class="line">  	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>   <span class="token comment">//定义一个b等于10</span></span>
<span class="line">  	<span class="token keyword">int</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>   <span class="token comment">//语义非常明确，c就是a加上b计算出来的结果。</span></span>
<span class="line">  	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不过现在看不懂没关系，我们后面慢慢学。</p><p>C语言虽然支持按照我们更容易理解的方式去进行编程，但是最后还是会编译成汇编指令最后变成计算机可以直接执行的指令，不过具体的编译过程，我们不需要再关心了，我们只需要去写就可以了，而对我们代码进行编译的东西，称为编译器。</p><p><img src="`+C+'" alt="image-20250620085349991"></p><p>当然，除了C语言之外，还有很多其他的高级语言，比如Java、Python、C#、PHP等等，相比其他编程语言，C算是比较古老的一种了，但是时隔多年直至今日，其他编程语言也依然无法撼动它的王者地位：</p><p><img src="'+B+`" alt="image-20250620085409410"></p><p>可以看到在2021年9月，依然排在编程语言排行榜的<strong>第一名</strong>（Python和Java紧随其后），可见这门语言是多么的不可撼动，很多操作系统、高级编程语言底层实现，几乎都是依靠C语言去编写的（包括Java的底层也是C/C++实现的）所以学习这一门语言，对于理工科尤其是计算机专业极为重要，学好C语言你甚至可以融汇贯通到其他语言，学起来也会轻松很多。</p><h3 id="走进java语言" tabindex="-1"><a class="header-anchor" href="#走进java语言"><span>走进Java语言</span></a></h3><p>前面我们介绍了C语言，它实际上就是通过编译，将我们可以看懂的代码，翻译为计算机能够直接执行的指令，这样计算机就可以按照我们想要的方式去进行计算了。当然，除了C语言之外，也有其他的语言，比如近几年也很火的Python，它跟C语言不同，它并不会先进行编译，而是直接交给解释器解释执行：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="`+A+'" alt="image-20250620085426194"></p><p>可见，这种方式也可以让计算机按照我们的想法去进行工作。</p><p>一般来说，编程语言就分为两大类：</p><ul><li><strong>编译型语言：</strong> 需要先编译为计算机可以直接执行的命令才可以运行。优点是计算机直接运行，性能高；缺点是与平台密切相关，在一种操作系统上编译的程序，无法在其他非同类操作系统上运行，比如Windows下的exe程序在Mac上就无法运行。</li><li><strong>解释型语言：</strong> 只需要通过解释器代为执行即可，不需要进行编译。优点是可以跨平台，因为解释是解释器的事情，只需要在各个平台上安装对应的解释器，代码不需要任何修改就可以直接运行；缺点是需要依靠解释器解释执行，效率肯定没直接编译成机器指令运行的快，并且会产生额外的资源占用。</li></ul><p><img src="'+f+'" alt="image-20250620085443605"></p><p>那么我们来看看我们今天要介绍的主角，Java语言（Java之父：James Gosling，詹姆斯·高斯林）</p><blockquote><p>Write Once, Run Anywhere.</p></blockquote><p>这是Java语言的标语，它的目标很明确：一次编写，到处运行，它旨在打破平台的限制，让Java语言可以运行在任何平台上，并且不需要重新编译，实现跨平台运行。</p><p>Java自1995年正式推出以来，已经度过了快28个春秋，而基于Java语言，我们的生活中也有了各种各样的应用：</p><p><img src="'+D+'" alt="image-20250620085500909"></p><ul><li>诺基亚手机上的很多游戏都是使用Java编写的。</li><li>安卓系统中的各种应用程序也是使用Java编写的。</li><li>著名沙盒游戏《Minecraft》也有对应的Java版本，得益于Java跨平台特性，无论在什么操作系统上都可以玩到这款游戏。</li><li>...</li></ul><p>（有关Java的详细发展历程，可以参考《Java核心技术·卷I》第一章）</p><p>可见，Java实际上早已在我们生活中的各个地方扎根。那么，Java语言是什么样的一个运行机制呢？</p><p>实际上我们的Java程序也是需要进行编译才可以运行的，这一点与C语言是一样的，Java程序编译之后会变成<code>.class</code>结尾的二进制文件：</p><p><img src="'+I+'" alt="image-20250620085522567"></p><p>不过不同的是，这种二进制文件计算机并不能直接运行，而是需要交给JVM（Java虚拟机）执行。</p><p><img src="'+h+'" alt="image-20250620085542181"></p><p>JVM是个什么东西呢？简单来说，它就像我们前面介绍的解释器一样，我们可以将编译完成的<code>.class</code>文件直接交给JVM去运行，而程序中要做的事情，也都是由它来告诉计算机该如何去执行。</p><p>在不同的操作系统下，都有着对应的JVM实现，我们只需要安装好就可以了，而我们程序员只需要将Java程序编译为<code>.class</code>文件就可以直接交给JVM运行，无论是什么操作系统，JVM都采用的同一套标准读取和执行<code>.class</code>文件，所以说我们编译之后，在任何平台都可以运行，实现跨平台。</p><p>由于Java又需要编译同时还需要依靠JVM解释执行，所以说Java<strong>既是编译型语言，也是解释型语言。</strong></p><p>Java分为很多个版本：</p><ul><li><strong>JavaSE：</strong> 是我们本教程的主要学习目标，它是标准版的Java，也是整个Java的最核心内容，在开始后续课程之前，这是我们不得不越过的一道坎，这个阶段一定要认真扎实地将Java学好，不然到了后面的高级部分，会很头疼。</li><li><strong>JavaME：</strong> 微缩版Java，已经基本没人用了。</li><li><strong>JavaEE：</strong> 企业级Java，比如网站开发，它是JavaSE阶段之后的主要学习方向。</li></ul><p>从下节课开始，我们就正式地进行Java环境的安装和IDE的使用学习。</p><hr><h2 id="环境安装与ide使用" tabindex="-1"><a class="header-anchor" href="#环境安装与ide使用"><span>环境安装与IDE使用</span></a></h2><p>前面我们介绍了Java语言，以及其本身的一些性质，这一部分我们就开始进行学习环境安装（这一部分请务必跟着操作，不要自作主张地去操作，一开始就出问题其实是最劝退新手的）</p><h3 id="jdk下载与安装" tabindex="-1"><a class="header-anchor" href="#jdk下载与安装"><span>JDK下载与安装</span></a></h3><p>首先我们来介绍一下JDK和JRE，各位小伙伴一定要能够区分这两者才可以。</p><ul><li><strong>JRE（Java Runtime Environment）</strong>：Java的运行环境，安装了运行环境之后，Java程序才可以运行，一般不做开发，只是需要运行Java程序直接按照JRE即可。</li><li><strong>JDK（Java Development Kit）</strong>：包含JRE，并且还附带了大量开发者工具，我们学习Java程序开发就使用JDK即可。</li></ul><p>它们的关系如下：</p><p><img src="'+w+'" alt="image-20250620085558118"></p><p>那么现在我们就去下载JDK吧，这里推荐安装免费的ZuluJDK：https://www.azul.com/downloads/?version=java-8-lts&amp;package=jdk</p><p>在这里选择自己的操作系统对应的安装包：</p><p><img src="'+x+'" alt="image-20250620085613937"></p><p>比如Windows下，我们就选择<code>.msi</code>的安装包即可（MacOS、Linux下同样选择对应的即可）</p><p><img src="'+S+'" alt="image-20250620085631568"></p><p>下载完成后，我们直接双击安装：</p><p><img src="'+y+'" alt="image-20250620085649861"></p><p>**注意，这里不建议各位小伙伴去修改安装的位置！**新手只建议安装到默认位置（不要总担心C盘不够，该装的还是要装，尤其是这种环境，实在装不下就去将其他磁盘的空间分到C盘一部分）如果是因为没有安装到默认位置出现了任何问题，你要是找不到大佬问的话，又得重新来一遍，就很麻烦。</p><p>剩下的我们只需要一路点击Next即可，安装完成之后，我们打开CMD命令窗口（MacOS下直接打开“终端”）来验证一下（要打开CMD命令窗口，Windows11可以直接在下面的搜索框搜索cmd即可，或者直接在文件资源管理器路径栏输入cmd也可以）</p><p>我们直接输入java命令即可：</p><p><img src="'+M+'" alt="image-20250620085716552"></p><p>如果能够直接输出内容，说明环境已经安装成功了，正常情况下已经配置好了，我们不需要手动去配置什么环境变量，所以说安装好就别管了。</p><p>输入<code>java -version</code>可以查看当前安装的JDK版本：</p><p><img src="'+P+`" alt="image-20250620085731743"></p><p>只要是1.8.0就没问题了，后面的小版本号可能你们会比我的还要新。</p><p>这样我们就完成了Java环境的安装，我们可以来体验一下编写并且编译运行一个简单的Java程序，我们新建一个文本文档，命名为<code>Main.txt</code>（如果没有显示后缀名，需要在文件资源管理器中开启一下）然后用记事本打开，输入以下内容：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在看不懂没关系，直接用就行，我们后面会一点一点讲解的。</p><p>编辑好之后，保存退出，接着我们将文件的后缀名称修改为<code>.java</code>这是Java源程序文件的后缀名称：</p><p><img src="`+U+'" alt="image-20250620085750261"></p><p>此时我们打开CMD，注意要先进入到对应的路径下，比如我们现在的路径：</p><p><img src="'+j+'" alt="image-20250620085806688"></p><p>我们使用<code>cd</code>命令先进入到这个目录下：</p><p><img src="'+V+'" alt="image-20250620085822848"></p><p>要编译一个Java程序，我们需要使用<code>javac</code>命令来进行：</p><p><img src="'+K+'" alt="image-20250620085835369"></p><p>执行后，可以看到目录下多出来了一个<code>.class</code>文件：</p><p><img src="'+q+'" alt="image-20250620085845999"></p><p>这样我们就成功编译了一个Java程序，然后我们就可以将其交给JVM运行了，我们直接使用<code>java</code>命令即可：</p><p><img src="'+W+'" alt="image-20250620085900756"></p><p>注意不要加上后缀名称，直接输入文件名字即可，可以看到打印了一个 Hello World! 字样，我们的第一个Java程序就可以运行了。</p><h3 id="idea安装与使用" tabindex="-1"><a class="header-anchor" href="#idea安装与使用"><span>IDEA安装与使用</span></a></h3><p>前面我们介绍了JDK开发环境的安装以及成功编译运行了我们的第一个Java程序。</p><p>但是我们发现，如果我们以后都使用记事本来进行Java程序开发的话，是不是效率太低了点？我们还要先编辑，然后要改后缀，还要敲命令来编译，有没有更加方便一点的写代码的工具呢？这里我们要介绍的是：<strong>IntelliJ IDEA</strong>（这里不推荐各位小伙伴使用Eclipse，因为操作上没有IDEA这么友好）</p><p>IDEA准确来说是一个集成开发环境（IDE），它集成了大量的开发工具，编写代码的错误检测、代码提示、一键完成编译运行等，非常方便。</p>',77)),p("p",null,[s[50]||(s[50]=a("下载地址：",-1)),p("a",Ws,[s[49]||(s[49]=a("IntelliJ IDEA：JetBrains 功能强大、符合人体工程学的 Java IDE",-1)),t(n)]),s[51]||(s[51]=a("（如果你之前学习C语言程序设计篇使用过CLion，你会发现界面一模一样，这样就能方便你快速上手）",-1))]),s[60]||(s[60]=e('<p><img src="'+F+'" alt="image-20250620085916666"></p><p>我们直接点击下载即可：</p><p><img src="'+O+'" alt="image-20250620085929693"></p><p>这个软件本身是付费的，比较贵，而且最近还涨价了，不过这里我们直接下载面的社区版本就行了（JavaSE学习阶段不需要终极版，但是建议有条件的还是申请一个，因为后面JavaWeb开始就需要终极版了，学生和教师可以直接免费申请一年的使用许可，并且每个学期都可以续一年）</p><p>下载好之后，直接按照即可，这个不强制要求安装到C盘，自己随意，但是注意路径中不要出现中文！</p><p><img src="'+H+'" alt="image-20250620085948735"></p><p>这里勾选一下创建桌面快捷方式就行：</p><p><img src="'+N+'" alt="image-20250620090004989"></p><p>安装完成后，我们直接打开就可以了：</p><p><img src="'+L+'" alt="image-20250620090026317"></p><p>此时界面是全英文，如果各位小伙伴看得惯，可以直接使用全英文的界面（使用英文界面可以认识更多的专业术语词汇，但是可能看起来没中文那么直观，而且IDEA本身功能就比较多，英语不好的小伙伴就很头疼）这里还是建议英语不好的小伙伴使用中文界面，要使用中文只需要安装中文插件即可：</p><p><img src="'+R+'" alt="image-20250620090046165"></p><p>我们打开Plugins插件这一栏，然后直接在插件市场里面搜索Chinese，可以找到一个中文语言包的插件，我们直接Install安装即可，安装完成后点击重启，现在就是中文页面了：</p><p><img src="'+G+'" alt="image-20250620090106581"></p><p>如果各位小伙伴不喜欢黑色主题，也可以修改为白色主题，只需要在自定义中进行修改即可，一共四种主题。</p><p>如果你之前使用过其他IDE编写代码，这里还支持按键映射（采用其他IDE的快捷键方案）有需要的可以自己修改一下：</p><p><img src="'+X+'" alt="image-20250620090126051"></p><p>接下来，我们来看看如何使用IDEA编写Java程序，IDEA是以项目的形式对一个Java程序进行管理的，所以说我们直接创建一个新的项目，点击新建项目：</p><p><img src="'+T+'" alt="image-20250620090141282"></p><p>此时来到创建页面：</p><p><img src="'+Z+'" alt="image-20250620090156022"></p><ul><li><strong>名称：</strong> 你的Java项目的名称，随便起就行，尽量只带英文字母和数字，不要出现特殊字符和中文。</li><li><strong>位置：</strong> 项目的存放位置，可以自己根据情况修改，同样的，路径中不要出现中文。</li><li><strong>语言：</strong> IDEA支持编写其他语言的项目，但是这里我们直接选择Java就行了。</li><li><strong>构建系统：</strong> 在JavaSE阶段一律选择IntelliJ就行了，Maven我们会在JavaWeb之后进行讲解，Gradle会在安卓开发教程中介绍。</li><li><strong>JDK：</strong> 就是我们之前安装好的JDK，如果是默认路径安装，这里会自动识别（所以说不要随便去改，不然这些地方就很麻烦）</li></ul><p>当然，如果JDK这里没有自动识别到，那么就手动添加一下：</p><p><img src="'+z+'" alt="image-20250620090208382"></p><p>没问题之后，我们直接创建项目：</p><p><img src="'+Q+'" alt="image-20250620090246032"></p><p>进入之后，可以看到已经自动帮助我们创建好了一个<code>java</code>源文件，跟我们之前的例子是一样的。要编译运行我们的Java程序，只需要直接点击左边的三角形（启动按钮）即可：</p><p><img src="'+Y+'" alt="image-20250620090305721"></p><p>点击之后，会在下方自动开始构建：</p><p><img src="'+$+'" alt="image-20250620090326421"></p><p>完成之后，就可以在控制台看到输出的内容了：</p><p><img src="'+ss+'" alt="image-20250620090348716"></p><p>我们可以看到新增加了一个<code>out</code>目录，这里面就是刚刚编译好的<code>.class</code>文件：</p><p><img src="'+as+'" alt="image-20250620090420855"></p><p>IDEA非常强大，即使是编译之后的二进制文件，也可以反编译回原代码的样子：</p><p><img src="'+ps+'" alt="image-20250620090436757"></p><p>如果我们想写一个新的Java项目，可以退出当前项目重新创建：</p><p><img src="'+ns+'" alt="image-20250620090500356"></p><p>此时项目列表中就有我们刚刚创建的Java项目了：</p><p><img src="'+ts+'" alt="image-20250620090511334"></p><p>如果你还想探索IDEA的其他功能，可以点击欢迎页最下方的学习：</p><p><img src="'+es+'" alt="image-20250620090525068"></p><p>会有一个专门的引导教程项目，来教你如何使用各项功能：</p><p><img src="'+is+'" alt="image-20250620090546721"></p><h3 id="idea新ui介绍和外观设置" tabindex="-1"><a class="header-anchor" href="#idea新ui介绍和外观设置"><span>IDEA新UI介绍和外观设置</span></a></h3><p>IDEA在2022年开启了界面新UI的测试，并将在年底前实装，所以说我们将老UI界面改为新的UI界面进行介绍（如果已经是新UI的样式，那么就不需要像下面一样开启了）</p><p>我们随便进入一个项目，然后双击Shift出现搜索框（这个搜索框很好用，什么都能搜）输入<code>registry</code></p><p><img src="'+os+'" alt="image-20250620090606678"></p><p>找到<code>ide.experimental.ui</code>，将其勾选上，然后重启IDEA就变成新的UI样式了（你不说这是IDEA我还以为是VS呢）</p><p><img src="'+rs+'" alt="image-20250620090627355"></p><p>这里介绍一下新UI的各个功能，首先是运行项目，依然是点击左侧三角形：</p><p><img src="'+ls+'" alt="image-20250620090646470"></p><p>在第一次运行后，会自动生成一个运行配置，我们也可以直接点击右上角的运行：</p><p><img src="'+ms+'" alt="image-20250620090702563"></p><p>效果是一样的，都可以编译运行Java项目。上面一排工具栏被丢到了一个菜单里面：</p><p><img src="'+gs+'" alt="image-20250620090715951"></p><p>如果各位小伙伴觉得代码字体太小了，可以在设置中进行调整：</p><p><img src="'+ds+'" alt="image-20250620090737629"></p><p>IDEA的所有通知都可以在通知中查看：</p><p><img src="'+cs+'" alt="image-20250620090757275"></p><p>我们来看右下角，第一个三角形图标是运行的结果：</p><p><img src="'+us+'" alt="image-20250620090813436"></p><p>第二栏是终端（其实就是内嵌的一个CMD命令窗口）可以自由敲命令，默认是位于项目根目录下：</p><p><img src="'+vs+'" alt="image-20250620090833735"></p><p>至此，学习前准备就完成了，从下节课开始，我们将正式进入到Java语言的学习中。</p>',65))])}const Ns=i(Es,[["render",Fs]]),Ls=JSON.parse('{"path":"/docs/Java/Baima/JavaSE/JavaSE/2-JavaSE.html","title":"走进Java语言","lang":"en-US","frontmatter":{"title":"走进Java语言","date":"2025/06/19"},"headers":[{"level":2,"title":"计算机思维导论","slug":"计算机思维导论","link":"#计算机思维导论","children":[{"level":3,"title":"计算机的世界","slug":"计算机的世界","link":"#计算机的世界","children":[]},{"level":3,"title":"操作系统概述","slug":"操作系统概述","link":"#操作系统概述","children":[]},{"level":3,"title":"计算机编程语言","slug":"计算机编程语言","link":"#计算机编程语言","children":[]},{"level":3,"title":"走进Java语言","slug":"走进java语言","link":"#走进java语言","children":[]}]},{"level":2,"title":"环境安装与IDE使用","slug":"环境安装与ide使用","link":"#环境安装与ide使用","children":[{"level":3,"title":"JDK下载与安装","slug":"jdk下载与安装","link":"#jdk下载与安装","children":[]},{"level":3,"title":"IDEA安装与使用","slug":"idea安装与使用","link":"#idea安装与使用","children":[]},{"level":3,"title":"IDEA新UI介绍和外观设置","slug":"idea新ui介绍和外观设置","link":"#idea新ui介绍和外观设置","children":[]}]}],"git":{"createdTime":1754894104000,"updatedTime":1754894104000,"contributors":[{"name":"chenkai","email":"1134596043@qq.com","commits":1}]},"filePathRelative":"docs/Java/Baima/JavaSE/JavaSE/2-JavaSE.md"}');export{Ns as comp,Ls as data};
